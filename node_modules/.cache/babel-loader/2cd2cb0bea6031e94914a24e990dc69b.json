{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documents/reactjs/Letmeask/src/pages/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from '../assets/images/logo.svg';\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const params = useParams();\n  const [newQuestion, setNewQuestion] = useState('');\n  const roomId = params.id;\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHightlihted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: params.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sala React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"4 perguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voc\\xEA quer perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Enivar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"n0RuRC+aFHXxIW0mpD1PdzVNX80=\", false, function () {\n  return [useAuth, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/mariana/Documents/reactjs/Letmeask/src/pages/Room.tsx"],"names":["useState","useParams","logoImg","Button","RoomCode","useAuth","database","Room","user","params","newQuestion","setNewQuestion","roomId","id","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHightlihted","isAnswered","ref","push","target","value"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAO,qBAAP;;AAMA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,QAAM;AAACC,IAAAA;AAAD,MAASH,OAAO,EAAtB;AACA,QAAMI,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMY,MAAM,GAAGH,MAAM,CAACI,EAAtB;;AAEA,iBAAeC,kBAAf,CAAkCC,KAAlC,EAAoD;AAEhDA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGN,WAAW,CAACO,IAAZ,OAAuB,EAA1B,EAA8B;AAC1B;AACH;;AAED,QAAG,CAACT,IAAJ,EAAU;AACN,YAAM,IAAIU,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAEV,WADI;AAEbW,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAEd,IAAI,CAACc,IADP;AAEJC,QAAAA,MAAM,EAAEf,IAAI,CAACe;AAFT,OAFK;AAMbC,MAAAA,aAAa,EAAE,KANF;AAObC,MAAAA,UAAU,EAAE;AAPC,KAAjB;AAUA,UAAMnB,QAAQ,CAACoB,GAAT,CAAc,SAAQd,MAAO,YAA7B,EAA0Ce,IAA1C,CAA+CR,QAA/C,CAAN;AACH;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEjB,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEO,MAAM,CAACI;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMK;AAAM,QAAA,QAAQ,EAAEC,kBAAhB;AAAA,gCACI;AAAW,UAAA,WAAW,EAAC,+BAAvB;AACG,UAAA,QAAQ,EAAEC,KAAK,IAAIJ,cAAc,CAACI,KAAK,CAACa,MAAN,CAAaC,KAAd,CADpC;AAEG,UAAA,KAAK,EAAEnB;AAFV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAA,iEAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANL;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA7DeH,I;UACGF,O,EACAJ,S;;;KAFHM,I","sourcesContent":["import { FormEvent, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport logoImg from '../assets/images/logo.svg';\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\n\nimport '../styles/room.scss';\n\ntype RoomParams = {\n    id: string;\n}\n\nexport function Room() {\n    const {user} = useAuth();\n    const params = useParams<RoomParams>();\n    const [newQuestion, setNewQuestion] = useState('');\n\n    const roomId = params.id;\n\n    async function handleSendQuestion(event: FormEvent) {\n\n        event.preventDefault();\n\n        if(newQuestion.trim() === '') {\n            return;\n        }\n\n        if(!user) {\n            throw new Error('You must be logged in');\n        }\n\n        const question = {\n            content: newQuestion,\n            author: {\n                name: user.name,\n                avatar: user.avatar,\n            },\n            isHightlihted: false,\n            isAnswered: false\n        };\n\n        await database.ref(`rooms/${roomId}/questions`).push(question);\n    }\n\n    return(\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"logo\" />\n                        <RoomCode code={params.id}/>\n                </div>\n            </header>\n\n            <main className=\"content\">\n                <div className=\"room-title\">\n                    <h1>Sala React</h1>\n                    <span>4 perguntas</span>\n                 </div>\n\n                 <form onSubmit={handleSendQuestion}>\n                     <textarea  placeholder='O que você quer perguntar?' \n                        onChange={event => setNewQuestion(event.target.value)}\n                        value={newQuestion}\n                     />\n\n                     <div className=\"form-footer\">\n                         <span>Para enviar uma pergunta <button>faça seu login</button></span>\n                         <Button type='submit'>Enivar pergunta</Button>\n                     </div>\n                 </form>\n            </main>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}