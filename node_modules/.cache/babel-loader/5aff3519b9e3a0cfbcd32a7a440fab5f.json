{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documents/reactjs/Letmeask/src/contexts/AuthContext.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nconst [user, setUser] = useState();\nuseEffect(() => {\n  var _s = $RefreshSig$();\n\n  const unsubscribe = _s(auth.onAuthStateChanged(_s(user => {\n    _s();\n\n    if (user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing informatio from Google Account');\n      }\n\n      useState({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }, \"FsonW/Y16PGMxRPYI2bFvVrtMzw=\")), \"FsonW/Y16PGMxRPYI2bFvVrtMzw=\");\n\n  return () => {\n    unsubscribe();\n  };\n}, []);\n\nasync function singInWithGoogle() {\n  _s2();\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const result = await auth.signInWithPopup(provider);\n\n  if (result.user) {\n    const {\n      displayName,\n      photoURL,\n      uid\n    } = result.user;\n\n    if (!displayName || !photoURL) {\n      throw new Error('Missing informatio from Google Account');\n    }\n\n    useState({\n      id: uid,\n      name: displayName,\n      avatar: photoURL\n    });\n  }\n}\n\n_s2(singInWithGoogle, \"5atXdOeLa54SVUlrOOpbCZjQEuA=\");\n\nexport function AuthContextProvider(props) {\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      singInWithGoogle\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/mariana/Documents/reactjs/Letmeask/src/contexts/AuthContext.tsx"],"names":["createContext","AuthContext","user","setUser","useState","useEffect","unsubscribe","auth","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","singInWithGoogle","provider","firebase","GoogleAuthProvider","result","signInWithPopup","AuthContextProvider","props","children"],"mappings":";;;AAAA,SAASA,aAAT,QAAwC,OAAxC;;AAiBA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,CAAC,EAAD,CAAjC;AAEP,MAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,EAAhC;AAEEC,SAAS,CAAC,MAAM;AAAA;;AACd,QAAMC,WAAW,MAAGC,IAAI,CAACC,kBAAL,IAAwBN,IAAI,IAAI;AAAA;;AAClD,QAAGA,IAAH,EAAS;AACP,YAAM;AAAEO,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAgCT,IAAtC;;AAEA,UAAG,CAACO,WAAD,IAAgB,CAACC,QAApB,EAA8B;AAC5B,cAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAEDR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,EAAE,EAAEF,GADG;AAEPG,QAAAA,IAAI,EAAEL,WAFC;AAGPM,QAAAA,MAAM,EAAEL;AAHD,OAAD,CAAR;AAKD;AACF,GAdmB,kCAAH,iCAAjB;;AAgBA,SAAM,MAAM;AACVJ,IAAAA,WAAW;AACZ,GAFD;AAID,CArBQ,EAqBP,EArBO,CAAT;;AAuBA,eAAeU,gBAAf,GAAkC;AAAA;;AAChC,QAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACX,IAAT,CAAcY,kBAAlB,EAAjB;AAEA,QAAMC,MAAM,GAAG,MAAMb,IAAI,CAACc,eAAL,CAAqBJ,QAArB,CAArB;;AAEI,MAAGG,MAAM,CAAClB,IAAV,EAAgB;AACd,UAAM;AAAEO,MAAAA,WAAF;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA;AAAzB,QAAgCS,MAAM,CAAClB,IAA7C;;AAEA,QAAG,CAACO,WAAD,IAAgB,CAACC,QAApB,EAA8B;AAC5B,YAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAEDR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,EAAE,EAAEF,GADG;AAEPG,MAAAA,IAAI,EAAEL,WAFC;AAGPM,MAAAA,MAAM,EAAEL;AAHD,KAAD,CAAR;AAKD;AACN;;IAlBcM,gB;;AAoBjB,OAAO,SAASM,mBAAT,CAA6BC,KAA7B,EAAqD;AACxD,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAErB,MAAAA,IAAF;AAAQc,MAAAA;AAAR,KAA7B;AAAA,cACKO,KAAK,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KANeF,mB","sourcesContent":["import { createContext,ReactNode } from \"react\";\n\ntype User = {\n    id: string;\n    name: string;\n    avatar: string;\n  }\n  \n  type AuthContextType = {\n    user: User | undefined;\n    singInWithGoogle: () => Promise<void>;\n  }\n  \ntype AuthContextProps = {\n    children: ReactNode;\n}\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nconst [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if(user) {\n        const { displayName, photoURL, uid} = user\n\n        if(!displayName || !photoURL) {\n          throw new Error('Missing informatio from Google Account');\n        }\n        \n        useState({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        })\n      }\n    })\n\n    return() => {\n      unsubscribe();\n    }\n\n  },[] )\n\n  async function singInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    const result = await auth.signInWithPopup(provider);\n\n        if(result.user) {\n          const { displayName, photoURL, uid} = result.user\n\n          if(!displayName || !photoURL) {\n            throw new Error('Missing informatio from Google Account');\n          }\n          \n          useState({\n            id: uid,\n            name: displayName,\n            avatar: photoURL\n          })\n        }\n  }\n\nexport function AuthContextProvider(props:AuthContextProps) {\n    return(\n        <AuthContext.Provider value={{ user, singInWithGoogle }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}