{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { database } from \"../services/firebase\";\nexport function useRoom(roomId) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n      var _databaseRoom$questio;\n\n      const databaseRoom = room.val();\n      const firebaseQuestions = (_databaseRoom$questio = databaseRoom.questions) !== null && _databaseRoom$questio !== void 0 ? _databaseRoom$questio : {};\n      const parsedQuestions = Object.entries(firebaseQuestions).map(_ref => {\n        let [key, value] = _ref;\n        return {\n          id: key,\n          content: value.content,\n          author: value.author,\n          isHighlighted: value.isHighlighted,\n          isAnswered: value.isAnswered\n        };\n      });\n      setTitle(databaseRoom.title);\n      setQuestions(parsedQuestions);\n    });\n  }, [roomId]);\n  return {\n    questions,\n    title\n  };\n}\n\n_s(useRoom, \"en7WwbUlyVUkE+lFVapgearQsFw=\");","map":{"version":3,"sources":["/home/mariana/Documents/reactjs/Letmeask/src/hooks/useRoom.ts"],"names":["useEffect","useState","database","useRoom","roomId","questions","setQuestions","title","setTitle","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestions","Object","entries","map","key","value","id","content","author","isHighlighted","isAnswered"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAuBA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAgC;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAa,EAAb,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,OAAO,GAAGP,QAAQ,CAACQ,GAAT,CAAc,SAAQN,MAAO,EAA7B,CAAhB;AAEAK,IAAAA,OAAO,CAACE,EAAR,CAAW,OAAX,EAAoBC,IAAI,IAAI;AAAA;;AAC1B,YAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,EAArB;AACA,YAAMC,iBAAoC,4BAAGF,YAAY,CAACR,SAAhB,yEAA6B,EAAvE;AAEA,YAAMW,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,QAAkB;AAAA,YAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB;AAC9E,eAAO;AACLC,UAAAA,EAAE,EAAEF,GADC;AAELG,UAAAA,OAAO,EAAEF,KAAK,CAACE,OAFV;AAGLC,UAAAA,MAAM,EAAEH,KAAK,CAACG,MAHT;AAILC,UAAAA,aAAa,EAAEJ,KAAK,CAACI,aAJhB;AAKLC,UAAAA,UAAU,EAAEL,KAAK,CAACK;AALb,SAAP;AAOD,OARuB,CAAxB;AAUAlB,MAAAA,QAAQ,CAACK,YAAY,CAACN,KAAd,CAAR;AACAD,MAAAA,YAAY,CAACU,eAAD,CAAZ;AACD,KAhBD;AAiBD,GApBM,EAoBJ,CAACZ,MAAD,CApBI,CAAT;AAsBE,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACL;;GA3BeJ,O","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { database } from \"../services/firebase\";\n\ntype FirebaseQuestions = Record<string, {\n    author: {\n      name: string;\n      avatar: string;\n    }\n    content: string;\n    isAnswered: boolean;\n    isHighlighted: boolean;\n  }>\n  \ntype Question = {\n    id: string;\n    author: {\n      name: string;\n      avatar: string;\n    }\n    content: string;\n    isAnswered: boolean;\n    isHighlighted: boolean;\n  }\n\nexport function useRoom(roomId:string) {\n    const [questions, setQuestions] = useState<Question[]>([])\n    const [title, setTitle] = useState('');\n\n    useEffect(() => {\n        const roomRef = database.ref(`rooms/${roomId}`);\n    \n        roomRef.on('value', room => {\n          const databaseRoom = room.val();\n          const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\n    \n          const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\n            return {\n              id: key,\n              content: value.content,\n              author: value.author,\n              isHighlighted: value.isHighlighted,\n              isAnswered: value.isAnswered,\n            }\n          })\n    \n          setTitle(databaseRoom.title);\n          setQuestions(parsedQuestions);\n        })\n      }, [roomId]);\n\n      return { questions, title} \n}"]},"metadata":{},"sourceType":"module"}