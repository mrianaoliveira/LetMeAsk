{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documents/reactjs/Letmeask/src/pages/AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport logoImg from '../assets/images/logo.svg';\nimport deletImg from '../assets/images/delete.svg';\nimport checkImg from '../assets/images/check.svg';\nimport answerImg from '../assets/images/answer.svg';\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Questions';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { useRoom } from '../hooks/useRoom';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  const history = useHistory();\n  const {\n    user\n  } = useAuth();\n  const params = useParams();\n  const [newQuestion, setNewQuestion] = useState('');\n  const roomId = params.id;\n  const {\n    questions,\n    title\n  } = useRoom(roomId);\n\n  async function handleEndRoom() {\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date()\n    });\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion() {\n    if (window.confirm('Tem certeza que deseja excluir essa pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questions}`).remove();\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered() {}\n\n  async function handleHighlightQuestion() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutline: true,\n            onClick: handleEndRoom,\n            children: \"Encerrar sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(questions => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: questions.content,\n            author: questions.author,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleCheckQuestionAsAnswered(),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: checkImg,\n                alt: \"marcar pergunta como respondida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleHighlightQuestion(),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: answerImg,\n                alt: \"da destque \\xE0 pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteQuestion(),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deletImg,\n                alt: \"deletar pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)]\n          }, questions.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AdminRoom, \"7lZnxDk0t+kuf8FtxP9ahXjogIA=\", false, function () {\n  return [useHistory, useAuth, useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["/home/mariana/Documents/reactjs/Letmeask/src/pages/AdminRoom.tsx"],"names":["useState","useHistory","useParams","logoImg","deletImg","checkImg","answerImg","Button","Question","RoomCode","useAuth","useRoom","database","AdminRoom","history","user","params","newQuestion","setNewQuestion","roomId","id","questions","title","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","window","confirm","remove","handleCheckQuestionAsAnswered","handleHighlightQuestion","length","map","content","author"],"mappings":"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","sourcesContent":["import { FormEvent, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport logoImg from '../assets/images/logo.svg';\nimport deletImg from '../assets/images/delete.svg';\nimport checkImg from '../assets/images/check.svg';\nimport answerImg from '../assets/images/answer.svg';\n\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Questions';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { useRoom } from '../hooks/useRoom';\nimport { database } from '../services/firebase';\n\nimport '../styles/room.scss';\n\ntype RoomParams = {\n  id: string;\n}\nexport function AdminRoom() {\n  const history = useHistory()\n    const { user } = useAuth();\n    const params = useParams<RoomParams>();\n    const [newQuestion, setNewQuestion] = useState('');\n    const roomId = params.id;\n    const {questions, title} = useRoom(roomId);\n\n    async function handleEndRoom() {\n      await database.ref(`rooms/${roomId}`).update({\n        endedAt: new Date(),\n      })\n\n      history.push('/');\n    }\n  \n    async function handleDeleteQuestion() {\n      if(window.confirm('Tem certeza que deseja excluir essa pergunta?')) {\n        await database.ref(`rooms/${roomId}/questions/${questions}`).remove();\n      }\n    }\n\n    async function handleCheckQuestionAsAnswered() {\n      \n    }\n\n    async function handleHighlightQuestion() {\n      \n    }\n  \n    return (\n      <div id=\"page-room\">\n        <header>\n          <div className=\"content\">\n            <img src={logoImg} alt=\"Letmeask\" />\n            <div>\n            <RoomCode code={roomId} />\n            <Button isOutline onClick={handleEndRoom}>Encerrar sala</Button>\n            </div>\n          </div>\n        </header>\n  \n        <main>\n          <div className=\"room-title\">\n            <h1>Sala {title}</h1>\n            { questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\n          </div>\n\n          <div className=\"question-list\">\n            {\n              questions.map(questions => {\n                return (\n                  <Question\n                    key={questions.id}\n                    content={questions.content}\n                    author={questions.author}>\n                    <button type='button'\n                      onClick={() => handleCheckQuestionAsAnswered()}\n                    >\n                        <img src={checkImg} alt='marcar pergunta como respondida' />\n                    </button>\n                    <button type='button'\n                      onClick={() => handleHighlightQuestion()}\n                    >\n                        <img src={answerImg} alt='da destque à pergunta' />\n                    </button>\n                    <button type='button'\n                      onClick={() => handleDeleteQuestion()}\n                    >\n                        <img src={deletImg} alt='deletar pergunta' />\n                    </button>\n                  </Question>\n\n                )\n              })\n            }\n          </div>\n        </main>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}